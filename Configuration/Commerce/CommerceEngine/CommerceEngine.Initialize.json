// -------------------------------------------------------------------------- //
//         Sitecore Install Framework - Initialize Commerce Services          //
//                                                                            //
//  Run this configuration to initialize Commerce Services.                   //
//                                                                            //
//  NOTE: Only single line comments are accepted in configurations.           //
// -------------------------------------------------------------------------- //

{
  "Parameters": {
    "UrlIdentityServerGetToken": {
      "Type": "string",
      "DefaultValue": "https://localhost:5050/connect/token",
      "Description": "Url IdentityServer GetToken"
    },
    "CommerceOpsServicesPort": {
      "Type": "string",
      "Description": "Commerce Shops Services port"
    },
    "SitecoreAdminAccount": {
      "Type": "psobject",
      "Description": "Sitecore Admin account."
    },
    "CommerceServicesPostfix": {
      "Type": "string",
      "DefaultValue": "Sc9",
      "Description": "The Commerce Engine postfix for services names"
    },
    "CommerceOpsService": {
      "Type": "string",
      "DefaultValue": "Sc9",
      "Description": "The Commerce Engine service for Ops"
    }
  },
  "Variables": {
    "CommerceOps": "[concat('CommerceOps_', parameter('CommerceServicesPostfix'))]",
    "CommerceShops": "[concat('CommerceShops_', parameter('CommerceServicesPostfix'))]",
    "CommerceAuthoring": "[concat('CommerceAuthoring_', parameter('CommerceServicesPostfix'))]",
    "CommerceMinions": "[concat('CommerceMinions_', parameter('CommerceServicesPostfix'))]",
    "CommerceOpsPhysicalPath": "[concat(environment('SystemDrive'), concat('\\inetpub\\', variable('CommerceOps')))]",
    "CommerceShopsPhysicalPath": "[concat(environment('SystemDrive'), concat('\\inetpub\\', variable('CommerceShops')))]",
    "CommerceAuthoringPhysicalPath": "[concat(environment('SystemDrive'), concat('\\inetpub\\', variable('CommerceAuthoring')))]",
    "CommerceMinionsPhysicalPath": "[concat(environment('SystemDrive'), concat('\\inetpub\\', variable('CommerceMinions')))]",
    "InitializeParam": "/commerceops/InitializeEnvironment(environment='envNameValue')",
    "UrlInitializeEnvironment": "[concat(parameter('CommerceOpsService'), ':', concat(parameter('CommerceOpsServicesPort'), variable('InitializeParam')))]",
    "UrlCheckCommandStatus": "[concat(parameter('CommerceOpsService'), ':', concat(parameter('CommerceOpsServicesPort'), '/commerceops/CheckCommandStatus(taskId=taskIdValue)'))]"
  },
  "Modules": ["InitializeCommerce"],
  "Tasks": {
    "DisableCsrfValidation": {
      "Type": "DisableCsrfValidation",
      "Params": {
        "CommerceServicesPathCollection": [
          "[variable('CommerceOpsPhysicalPath')]",
          "[variable('CommerceShopsPhysicalPath')]",
          "[variable('CommerceAuthoringPhysicalPath')]",
          "[variable('CommerceMinionsPhysicalPath')]"
        ]
      }
    },
    "GetIdServerToken": {
      "Type": "GetIdServerToken",
      "Params": {
        "SitecoreAdminAccount": "[parameter('SitecoreAdminAccount')]",
        "UrlIdentityServerGetToken": "[parameter('UrlIdentityServerGetToken')]"
      }
    },
    "InitializeCommerceServices": {
      "Type": "InitializeCommerceServices",
      "Params": {
        "UrlInitializeEnvironment": "[variable('UrlInitializeEnvironment')]",
        "UrlCheckCommandStatus": "[variable('UrlCheckCommandStatus')]",
        "Environments": [
          "AdventureWorksAuthoring",
          "HabitatAuthoring"
        ]
      }
    },
    "EnableCsrfValidation": {
      "Type": "EnableCsrfValidation",
      "Params": {
        "CommerceServicesPathCollection": [
          "[variable('CommerceOpsPhysicalPath')]",
          "[variable('CommerceShopsPhysicalPath')]",
          "[variable('CommerceAuthoringPhysicalPath')]",
          "[variable('CommerceMinionsPhysicalPath')]"
        ]
      }
    }
  }
}